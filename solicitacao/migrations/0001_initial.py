# Generated by Django 3.0.3 on 2020-03-30 19:36

from django.db import migrations, models
import django.db.models.deletion
import solicitacao.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dominio_suap', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificacao', models.CharField(max_length=255, verbose_name='Identificação')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('pagina', models.URLField(verbose_name='Página')),
            ],
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_conclusao_intercambio', models.DateField(blank=True, null=True, verbose_name='Conclusão do intercâmbio')),
                ('aluno_especial', models.NullBooleanField(verbose_name='Aluno especial?')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('passaporte', models.CharField(blank=True, max_length=250, null=True, verbose_name='Passaporte')),
                ('nome', models.CharField(max_length=250, verbose_name='Nome')),
                ('nome_social', models.CharField(blank=True, help_text='Só preencher este campo a pedido do aluno e de acordo com a legislação vigente.', max_length=250, null=True, verbose_name='Nome social')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('nome_pai', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nome do pai')),
                ('pai_falecido', models.NullBooleanField(verbose_name='Pai é falecido?')),
                ('nome_mae', models.CharField(max_length=250, verbose_name='Nome da mãe')),
                ('mae_falecida', models.BooleanField(verbose_name='Mãe é falecida?')),
                ('responsavel', models.CharField(blank=True, help_text='Obrigatório para menores de idade.', max_length=250, null=True, verbose_name='Nome do responsável')),
                ('email_responsavel', models.CharField(blank=True, max_length=250, null=True, verbose_name='Email do responsável')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF do responsável')),
                ('cep', models.CharField(blank=True, help_text='Formato: "99999-999"', max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(max_length=250, verbose_name='Logradouro')),
                ('numero', models.CharField(max_length=250, verbose_name='Número')),
                ('complemento', models.CharField(max_length=250, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=250, verbose_name='Bairro')),
                ('estado', models.CharField(max_length=250, verbose_name='Estado')),
                ('telefone_principal', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone principal')),
                ('telefone_secundario', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone secundário')),
                ('telefone_adicional_1', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone principal do responsável')),
                ('telefone_adicional_2', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone secundário do responsável')),
                ('email_pessoal', models.CharField(blank=True, help_text='É por este email que você configurará sua senha e acompanhará suas aulas. Informe um que costume acessar.', max_length=255, null=True, verbose_name='E-mail pessoal')),
                ('aluno_pne', models.BooleanField(verbose_name='Portador de necessidades especiais')),
                ('utiliza_transporte_escolar_publico', models.NullBooleanField(verbose_name='Utiliza transporte escolar público')),
                ('numero_rg', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número do RG')),
                ('data_emissao_rg', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('numero_titulo_eleitor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Título de eleitor')),
                ('zona_titulo_eleitor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zona')),
                ('secao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seção')),
                ('data_emissao_titulo_eleitor', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('numero_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número da carteira de reservista')),
                ('regiao_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Região')),
                ('serie_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Série')),
                ('ano_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ano')),
                ('numero_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de Termo')),
                ('folha_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Folha')),
                ('livro_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Livro')),
                ('data_emissao_certidao', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('matricula_certidao', models.CharField(blank=True, help_text='Obrigatório para certidões realizadas a partir de 01/01/2010', max_length=255, null=True, verbose_name='Livro')),
                ('arquivo_foto', models.CharField(blank=True, help_text='Obrigatório para certidões realizadas a partir de 01/01/2010', max_length=255, null=True, verbose_name='Foto')),
                ('autorizacao_carteira_estudantil', models.BooleanField(help_text='O aluno autoriza o envio de seus dados pessoais para o Sistema Brasileiro de Educação (SEB) para fins de emissão da carteira de estudante digital de acordo com a Medida Provisória Nº 895, de 6 de setembro de 2019', verbose_name='Autorização para emissão da carteira estudantil')),
                ('ano_conclusao_estudo_anterior', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.AnoConclusao', verbose_name='Ano de conclusão')),
                ('ano_letivo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.AnoLetivo', verbose_name='Ano letivo')),
                ('cidade', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to='dominio_suap.Cidade', verbose_name='Cidade')),
                ('convenio', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Convenio', verbose_name='Convênio')),
                ('cota_mec', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.CotaMEC', verbose_name='Cota MEC')),
                ('cota_sistec', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.CotaSISTEC', verbose_name='Cota SISTEC')),
                ('estado_civil', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes', to='dominio_suap.EstadoCivil', verbose_name='Estado civil')),
                ('estado_civil_mae', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='maes', to='dominio_suap.EstadoCivil', verbose_name='Estado civil da mãe')),
                ('estado_civil_pai', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pais', to='dominio_suap.EstadoCivil', verbose_name='Estado civil do pai')),
                ('estado_emissao_carteira_reservista', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservistas', to='dominio_suap.Estado', verbose_name='Estado emissor')),
                ('estado_naturalidade', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='naturais', to='dominio_suap.Estado', verbose_name='Tipo de veículo utilizado no transporte escolar')),
                ('forma_ingresso', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.FormaIngresso', verbose_name='Forma de ingresso')),
                ('linha_pesquisa', solicitacao.fields.FK(help_text='Obrigatório para alunos de Mestrado e Doutourado. Caso não saiba, escreva "A definir".', on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.LinhaPesquisa', verbose_name='Linha de pesquisa')),
                ('matriz_curso', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.MatrizCurso', verbose_name='Matriz/Curso')),
                ('nacionalidade', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Nacionalidade', verbose_name='Nacionalidade')),
                ('naturalidade', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='naturalidades', to='dominio_suap.Cidade', verbose_name='Naturalidade')),
                ('nivel_ensino_anterior', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.NivelEnsino', verbose_name='Nível de ensino')),
                ('orgao_emissao_rg', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.OrgaoEmissorRG', verbose_name='Orgão emissor')),
                ('pais_origem', solicitacao.fields.NullFK(blank=True, help_text='Obrigatório para estrangeiros', null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.PaisOrigem', verbose_name='País de origem')),
                ('parentesco_responsavel', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Responsavel', verbose_name='Parentesco do responsável')),
                ('periodo_letivo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.PeriodoLetivo', verbose_name='Período letivo')),
                ('poder_publico_responsavel_transporte', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoTransporte', verbose_name='Poder público responsável pelo transporte escolar')),
                ('polo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Polo', verbose_name='Polo EAD')),
                ('raca', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Raca', verbose_name='Raça')),
                ('sexo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Sexo', verbose_name='Sexo')),
                ('superdotacao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoSuperdotacao', verbose_name='Superdotação')),
                ('tipo_certidao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoCertidao', verbose_name='Tipo de certidão')),
                ('tipo_instituicao_origem', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoInstituicao', verbose_name='Tipo da instituição')),
                ('tipo_necessidade_especial', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoNecessidadeEspecial', verbose_name='Deficiência')),
                ('tipo_sanguineo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoSanguineo', verbose_name='Tipo sanguíneo')),
                ('tipo_transtorno', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoTranstorno', verbose_name='Transtorno')),
                ('tipo_veiculo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoVeiculo', verbose_name='Tipo de veículo utilizado no transporte escolar')),
                ('tipo_zona_residencial', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.ZonaResidencial', verbose_name='Zona residencial')),
                ('turno', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Turno', verbose_name='Turno')),
                ('uf_emissao_rg', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgs', to='dominio_suap.Estado', verbose_name='Estado emissor')),
                ('uf_emissao_titulo_eleitor', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='titulos', to='dominio_suap.Estado', verbose_name='Estado emissor')),
            ],
        ),
        migrations.CreateModel(
            name='Chamada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chamada', models.CharField(max_length=255, verbose_name='Convocação')),
                ('tipo_convocacao', models.CharField(choices=[('I', 'Inicial'), ('R', 'Remanescente')], default='I', max_length=1, verbose_name='Convocação')),
                ('inicio_solicitacoes', models.DateTimeField(verbose_name='Início das solicitações')),
                ('fim_solicitacoes', models.DateTimeField(verbose_name='Fim das solicitações')),
                ('edital', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Edital', verbose_name='Edital')),
            ],
        ),
    ]
