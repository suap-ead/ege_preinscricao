# Generated by Django 3.0.3 on 2020-04-16 05:24

from django.db import migrations, models
import django.db.models.deletion
import solicitacao.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dominio_suap', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chamada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chamada', models.CharField(max_length=255, verbose_name='Chamada')),
                ('tipo_chamada', models.CharField(choices=[('I', 'Inicial'), ('R', 'Remanescente')], default='I', max_length=1, verbose_name='Tipo')),
                ('inicio_solicitacoes', models.DateTimeField(verbose_name='Início das solicitações')),
                ('fim_solicitacoes', models.DateTimeField(verbose_name='Fim das solicitações')),
            ],
            options={
                'verbose_name': 'Chamada',
                'verbose_name_plural': 'Chamadas',
                'ordering': ['-tipo_chamada'],
            },
        ),
        migrations.CreateModel(
            name='Documentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificacao', models.CharField(max_length=255, verbose_name='Identificação')),
            ],
            options={
                'verbose_name': 'Documentação',
                'verbose_name_plural': 'Documentações',
                'ordering': ['identificacao'],
            },
        ),
        migrations.CreateModel(
            name='Edital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identificacao', models.CharField(max_length=255, verbose_name='Identificação')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('pagina', models.URLField(verbose_name='Página')),
                ('tem_ppi', models.BooleanField(verbose_name='Tem lista PPI?')),
                ('tem_pce', models.BooleanField(verbose_name='Tem lista PCD?')),
            ],
            options={
                'verbose_name': 'Edital',
                'verbose_name_plural': 'Editais',
                'ordering': ['identificacao', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='Selecionado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lista', models.CharField(choices=[('GERAL', 'Geral'), ('PPI', 'Preto/Pardo/Indígena'), ('PCD', 'Pessoa com deficiência')], max_length=250, verbose_name='Lista de seleção')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('passaporte', models.CharField(blank=True, max_length=250, null=True, verbose_name='Passaporte')),
                ('nome', models.CharField(max_length=250, verbose_name='Nome')),
                ('nome_social', models.CharField(blank=True, help_text='Só preencher este campo a pedido do aluno e de acordo com a legislação vigente.', max_length=250, null=True, verbose_name='Nome social')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
                ('inscricao', models.CharField(blank=True, max_length=250, null=True, verbose_name='Inscrição')),
                ('aluno_especial', models.NullBooleanField(verbose_name='Aluno especial?')),
                ('ano_letivo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.AnoLetivo', verbose_name='Ano letivo')),
                ('chamada', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Chamada', verbose_name='Chamada')),
                ('convenio', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Convenio', verbose_name='Convênio')),
                ('cota_mec', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.CotaMEC', verbose_name='Cota MEC')),
                ('cota_sistec', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.CotaSISTEC', verbose_name='Cota SISTEC')),
                ('forma_ingresso', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.FormaIngresso', verbose_name='Forma de ingresso')),
                ('matriz_curso', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.MatrizCurso', verbose_name='Matriz/Curso')),
                ('nacionalidade', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Nacionalidade', verbose_name='Nacionalidade')),
                ('periodo_letivo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.PeriodoLetivo', verbose_name='Período letivo')),
                ('polo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Polo', verbose_name='Polo EAD')),
                ('turno', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Turno', verbose_name='Turno')),
            ],
            options={
                'verbose_name': 'Selecionado',
                'verbose_name_plural': 'Selecionados',
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_conclusao_intercambio', models.DateField(blank=True, null=True, verbose_name='Conclusão do intercâmbio')),
                ('nome', models.CharField(max_length=250, verbose_name='Nome')),
                ('nome_social', models.CharField(blank=True, help_text='Só preencher este campo a pedido do aluno e de acordo com a legislação vigente.', max_length=250, null=True, verbose_name='Nome social')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('nome_pai', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nome do pai')),
                ('pai_falecido', models.NullBooleanField(verbose_name='Pai é falecido?')),
                ('nome_mae', models.CharField(max_length=250, verbose_name='Nome da mãe')),
                ('mae_falecida', models.BooleanField(verbose_name='Mãe é falecida?')),
                ('responsavel', models.CharField(blank=True, help_text='Obrigatório para menores de idade.', max_length=250, null=True, verbose_name='Nome do responsável')),
                ('email_responsavel', models.EmailField(blank=True, max_length=250, null=True, verbose_name='Email do responsável')),
                ('cpf_responsavel', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF do responsável')),
                ('cep', models.CharField(blank=True, help_text='Formato: "99999-999"', max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(max_length=250, verbose_name='Logradouro')),
                ('numero', models.CharField(max_length=250, verbose_name='Número')),
                ('complemento', models.CharField(max_length=250, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=250, verbose_name='Bairro')),
                ('telefone_principal', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone principal')),
                ('telefone_secundario', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone secundário')),
                ('telefone_adicional_1', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone principal do responsável')),
                ('telefone_adicional_2', models.CharField(blank=True, help_text='(00) 00000-0000', max_length=15, null=True, verbose_name='Telefone secundário do responsável')),
                ('email_pessoal', models.EmailField(blank=True, help_text='É por este email que você configurará sua senha e acompanhará suas aulas. Informe um que costume acessar.', max_length=254, null=True, verbose_name='E-mail pessoal')),
                ('aluno_pne', models.BooleanField(verbose_name='Portador de necessidades especiais')),
                ('utiliza_transporte_escolar_publico', models.NullBooleanField(verbose_name='Utiliza transporte escolar público')),
                ('numero_rg', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número do RG')),
                ('data_emissao_rg', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('numero_titulo_eleitor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Título de eleitor')),
                ('zona_titulo_eleitor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zona')),
                ('secao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seção')),
                ('data_emissao_titulo_eleitor', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('numero_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número da carteira de reservista')),
                ('regiao_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Região')),
                ('serie_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Série')),
                ('ano_carteira_reservista', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ano')),
                ('numero_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de Termo')),
                ('folha_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Folha')),
                ('livro_certidao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Livro')),
                ('data_emissao_certidao', models.DateField(blank=True, null=True, verbose_name='Data de emissão')),
                ('matricula_certidao', models.CharField(blank=True, help_text='Obrigatório para certidões realizadas a partir de 01/01/2010', max_length=255, null=True, verbose_name='Livro')),
                ('autorizacao_carteira_estudantil', models.BooleanField(help_text='O aluno autoriza o envio de seus dados pessoais para o Sistema Brasileiro de Educação (SEB) para fins de emissão da carteira de estudante digital de acordo com a Medida Provisória Nº 895, de 6 de setembro de 2019', verbose_name='Autorização para emissão da carteira estudantil')),
                ('organizacao_didatica', models.NullBooleanField(help_text='<p>Declaro que estou ciente das normas previstas na Organização Didática* do IFRN e que:</p><ol>  <li>Terei que frequentar as aulas presenciais, independente do turno, se assim a Instituição determinar;</li>  <li>Terei de renovar minha matrícula, periodicamente, durante o período de renovação de matrícula, previsto no Calendário Acadêmico, sob pena de ter a matrícula cancelada pela instituição;</li>  <li>Caso deixe de frequentar as aulas (acessar o ambiente virtual), nos 10 (dez) primeiros dias úteis do início do curso, sem que seja apresentada uma justificativa, serei desligado do IFRN, sendo minha vaga preenchida por outro candidato, de acordo com a ordem classificatória do processo seletivo.</li>  <li>O estudante não poderá ocupar matrículas simultâneas no mesmo campus ou em diferentes campi do IFRN, nas seguintes situações, independente da modalidade de ensino: em mais de um curso de pós-graduação stricto sensu, em mais de um curso de pós-graduação lato sensu; em mais de um curso de graduação; em mais de um curso técnico de nível médio. Não será permitida a matrícula simultânea em mais de dois cursos.</li>  <li>Para os alunos de graduação, estou ciente da Lei Federal nº 12.089 de 11 de novembro de 2009, que proíbe que uma mesma pessoa ocupe 2 (duas) vagas simultaneamente em instituições públicas de ensino superior.</li></ol><p>Diante do exposto, assumo o compromisso de seguir as normas institucionais, e peço deferimento.\u200b</p>', verbose_name='Organização didática')),
                ('autodeclaracao_etnia', models.NullBooleanField(help_text='DECLARO que sou uma pessoa de cor/raça conforme meu <b>formulário de solicitação de matrícula</b>, para o fim específico de atender aos termos do <b>Edital {{chamada.edital.identificacao}} - {{chamada.edital.titulo}}</b> no que se refere à reserva de vagas da lista diferenciada com a condição de etnia.', verbose_name='Autodeclaração de etnia')),
                ('penal', models.NullBooleanField(help_text='Declaro, também, estar ciente de que, a comprovação da falsidade desta declaração, em procedimento que me assegure o contraditório e a ampla defesa, implicará no cancelamento da minha matrícula nesta Instituição Federal de Ensino, sem prejuízo das sanções penais cabíveis.', verbose_name='Declarações legais')),
                ('veracidade', models.NullBooleanField(help_text='Reconheço que as informações prestadas são verdadeiras', verbose_name='Declaração de veracidade')),
                ('confirmacao', models.NullBooleanField(help_text='Confirmo que após concluir o meu cadastro não poderei mais alterar os dados e arquivos enviados.', verbose_name='Declaração de conclusão')),
                ('enviada_em', models.DateTimeField(blank=True, null=True, verbose_name='Enviada em')),
                ('sha512_solicitacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='SHA 512 dos dados e arquivo')),
                ('iniciada_em', models.DateTimeField(auto_now_add=True, verbose_name='Iniciada em')),
                ('salvo_em', models.DateTimeField(auto_now=True, verbose_name='Salva em')),
                ('ano_conclusao_estudo_anterior', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.AnoConclusao', verbose_name='Ano de conclusão')),
                ('cidade', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to='dominio_suap.Cidade', verbose_name='Cidade')),
                ('estado', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Estado', verbose_name='Estado')),
                ('estado_civil', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes', to='dominio_suap.EstadoCivil', verbose_name='Estado civil')),
                ('estado_civil_mae', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, related_name='maes', to='dominio_suap.EstadoCivil', verbose_name='Estado civil da mãe')),
                ('estado_civil_pai', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pais', to='dominio_suap.EstadoCivil', verbose_name='Estado civil do pai')),
                ('estado_emissao_carteira_reservista', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservistas', to='dominio_suap.Estado', verbose_name='Estado emissor')),
                ('estado_naturalidade', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='naturais', to='dominio_suap.Estado', verbose_name='Estado da naturalidade')),
                ('linha_pesquisa', solicitacao.fields.FK(help_text='Obrigatório para alunos de Mestrado e Doutourado. Caso não saiba, escreva "A definir".', on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.LinhaPesquisa', verbose_name='Linha de pesquisa')),
                ('naturalidade', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='naturalidades', to='dominio_suap.Cidade', verbose_name='Naturalidade')),
                ('nivel_ensino_anterior', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.NivelEnsino', verbose_name='Nível de ensino')),
                ('orgao_emissao_rg', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.OrgaoEmissorRG', verbose_name='Orgão emissor')),
                ('pais_origem', solicitacao.fields.NullFK(blank=True, help_text='Obrigatório para estrangeiros', null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.PaisOrigem', verbose_name='País de origem')),
                ('parentesco_responsavel', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Responsavel', verbose_name='Parentesco do responsável')),
                ('poder_publico_responsavel_transporte', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoTransporte', verbose_name='Poder público responsável pelo transporte escolar')),
                ('raca', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Raca', verbose_name='Raça')),
                ('selecionado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Selecionado', verbose_name='Selecionado')),
                ('sexo', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.Sexo', verbose_name='Sexo')),
                ('superdotacao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoSuperdotacao', verbose_name='Superdotação')),
                ('tipo_certidao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoCertidao', verbose_name='Tipo de certidão')),
                ('tipo_instituicao_origem', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoInstituicao', verbose_name='Tipo da instituição')),
                ('tipo_necessidade_especial', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoNecessidadeEspecial', verbose_name='Deficiência')),
                ('tipo_sanguineo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoSanguineo', verbose_name='Tipo sanguíneo')),
                ('tipo_transtorno', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoTranstorno', verbose_name='Transtorno')),
                ('tipo_veiculo', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.TipoVeiculo', verbose_name='Tipo de veículo utilizado no transporte escolar')),
                ('tipo_zona_residencial', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='dominio_suap.ZonaResidencial', verbose_name='Zona residencial')),
                ('uf_emissao_rg', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgs', to='dominio_suap.Estado', verbose_name='Estado emissor')),
                ('uf_emissao_titulo_eleitor', solicitacao.fields.NullFK(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='titulos', to='dominio_suap.Estado', verbose_name='Estado emissor')),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
            },
        ),
        migrations.CreateModel(
            name='PublicAuthToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, verbose_name='Token')),
                ('criado_em', models.DateTimeField(auto_now=True, verbose_name='Criado em')),
                ('chamada', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Chamada', verbose_name='Chamada')),
                ('selecionado', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Selecionado', verbose_name='Selecionado')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentoExigido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lista', models.CharField(choices=[('GERAL', 'Geral'), ('PPI', 'Preto/Pardo/Indígena'), ('PCD', 'Pessoa com deficiência')], max_length=250, verbose_name='Lista de seleção')),
                ('documentacao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Documentacao', verbose_name='Documentação')),
                ('edital', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Edital', verbose_name='Edital')),
            ],
            options={
                'verbose_name': 'Documento exigido',
                'verbose_name_plural': 'Documentos exigidos',
                'ordering': ['edital', 'documentacao', 'lista'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', models.FileField(upload_to='', verbose_name='Arquivo')),
                ('sha512_arquivo', models.CharField(max_length=255, verbose_name='SHA 512 do arquivo')),
                ('documentacao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Documentacao', verbose_name='Documentação')),
                ('solicitacao', solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Solicitacao', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
        migrations.AddField(
            model_name='chamada',
            name='edital',
            field=solicitacao.fields.FK(on_delete=django.db.models.deletion.CASCADE, to='solicitacao.Edital', verbose_name='Edital'),
        ),
    ]
